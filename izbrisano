iz osebe html:
  <th>EMŠO</th>
  <td>{{oseba.emso}}</td>


osnova:
<!DOCTYPE html>
<html>
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    

    <script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    
    <!-- <link href="{{url('static', filename='style.css')}}" rel="stylesheet">     -->
    <title style="text-align: center;">{{naslov}}</title>  
</head>
<body> 
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="navbar-nav">     
          
        
        %if stran=='osebe':
        <a class="nav-link active" href="{{url('/osebe')}}">Osebe</a>
        %else:
        <a class="nav-link" href="{{url('/osebe')}}">Osebe</a>
        %end  

        
        </div>

        <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">

          <ul class="navbar-nav ml-auto">
            % if rola and uporabnik:
            <span class="navbar-text">
              {{uporabnik}} ({{rola}}) 
            </span>
            %end      
                        
  
            <li class="nav-link">
                <a class="dropdown-item" href="{{url('odjava')}}">Odjava</a>
            </li>
            % end
          </ul>
        </div>





        iz app 
        """
@get('/dobi_parkirisca')
@cookie_required
def index():
    """
    "Domača stran z transakcijami.
    """   
  
    parkirisca = service.dobi_parkirisca()  

        
    return template_user('parkirisca.html', parkirisca = parkirisca)

"""



reposirory def dobi_rezervacijo(self, id) -> :
         self.cur.execute("""
            SELECT id, racun, cas, znesek, opis
            FROM transakcija
            Where id = %s
        """, (id,))
         
         t = transakcija.from_dict(self.cur.fetchone())
         return t    

def dodaj_rezervacijo(self) -> List[Rezervacija]:
        self.cur.execute("""
            INSERT into rezervacija(id, uporabnisko_ime, registrska_stevilka, prihod, odhod)
            VALUES (%s, %s, %s, %s, %s)"""
     

f dodaj_transakcijo(self, t : transakcija):
        self.cur.execute("""
            INSERT into transakcija(znesek, racun, cas, opis)
            VALUES (%s, %s, %s, %s)
            """, (t.znesek, t.racun, t.cas, t.opis))
        self.conn.commit(
            


@post('/rezervacija/<mesto_id:int>')
def rezervacija_post(mesto_id):
    ime = request.forms.get('ime')
    priimek = request.forms.get('priimek')
    registracija = request.forms.get('registracija')
    prihod = request.forms.get('prihod')
    odhod = request.forms.get('odh')

    service.naredi_rezervacijo(mesto_id, ime, priimek, registracija, prihod, odhod)
    return redirect(url('/parkirisce/1'))


@get('/rezervacija/<mesto_id:int>')
def prikazi_rezervacijo(mesto_id):
    # pridobi uporabnikovo vlogo iz seje ali druge logike
    rola = 'admin'  # ali 'uporabnik', ali None
    uporabnik = None 
    return template('rezervacija.html', mesto_id=mesto_id, rola=rola, uporabnik=uporabnik)



 <div class="form-group">
    <label for="ime">Ime</label>
    <input type="text" class="form-control" name="ime" id="ime" required>
  </div>

  <div class="form-group">
    <label for="priimek">Priimek</label>
    <input type="text" class="form-control" name="priimek" id="priimek" required>
  </div>